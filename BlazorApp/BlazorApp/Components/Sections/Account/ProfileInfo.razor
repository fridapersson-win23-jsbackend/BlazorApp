@using BlazorApp.Services
@attribute [StreamRendering]
@inject NavigationManager NavigationManager
@inject UserService UserService

@if(user != null)
{
    <div class="profile-info">
        <div class="img-container">
            <img src="@user.ProfilePicture" class="profile-img" />

            @* Fixa *@
        <EditForm enctype="multipart/form-data" method="POST" Model="user" FormName="ProfileUpload" OnValidSubmit="UploadProfileImg">
            <input id="uploadFile" type="file" name="file" hidden />
            <label for="uploadFile" class="btn-circle"><i class="fa-regular fa-refresh"></i></label>
        </EditForm>

        </div>

        <h5>@user.FirstName @user.LastName</h5>
        <p>@user.Email</p>

        <BlazorApp.Components.Layout.ManageNavMenu />
    </div>
}
else
{
    <p>Loading...</p>
}



@code {
    [Parameter]
    public ApplicationUser user { get; set; } = null!;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;


    protected override async Task OnInitializedAsync()
    {
        user = await UserService.GetUserAsync();
        // user = await UserManager.GetUserAsync(HttpContext.User) ?? null!;

    }
    public async Task UploadProfileImg()
    {

    }


}
