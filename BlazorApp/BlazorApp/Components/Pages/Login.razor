@page "/Account/Login"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using BlazorApp.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager

<PageTitle>Log in</PageTitle>

@* <h1>Log in</h1>
<div class="row">
    <div class="col-md-4">
        <section>
            <EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="login">
                <DataAnnotationsValidator />
                <h2>Use a local account to log in.</h2>
                <hr />
                <ValidationSummary class="text-danger" role="alert" />
                <div class="form-floating mb-3">
                    <InputText @bind-Value="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                    <label for="email" class="form-label">Email</label>
                    <ValidationMessage For="() => Input.Email" class="text-danger" />
                </div>
                <div class="form-floating mb-3">
                    <InputText type="password" @bind-Value="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" />
                    <label for="password" class="form-label">Password</label>
                    <ValidationMessage For="() => Input.Password" class="text-danger" />
                </div>
                <div class="checkbox mb-3">
                    <label class="form-label">
                        <InputCheckbox @bind-Value="Input.RememberMe" class="darker-border-checkbox form-check-input" />
                        Remember me
                    </label>
                </div>
                <div>
                    <button type="submit" class="w-100 btn btn-lg btn-primary">Log in</button>
                </div>
                <div>
                    <p>
                        <a href="Account/ForgotPassword">Forgot your password?</a>
                    </p>
                    <p>
                        <a href="@(NavigationManager.GetUriWithQueryParameters("Account/Register", new Dictionary<string, object?> { ["ReturnUrl"] = ReturnUrl }))">Register as a new user</a>
                    </p>
                    <p>
                        <a href="Account/ResendEmailConfirmation">Resend email confirmation</a>
                    </p>
                </div>
            </EditForm>
        </section>
    </div>
</div> *@


<section id="sign-in">
    <div class="container">
        <div class="sign-in-form">
            <EditForm FormName="signInForm" Model="Input" OnValidSubmit="LoginUser" method="post" novalidate>
                <DataAnnotationsValidator />

                <h1>Welcome Back</h1>
                <p>Don't have an account yet? <NavLink href="/account/register" class="sign-up-here">Sign up here</NavLink>.</p>

                @if (!string.IsNullOrEmpty(Input.Email))
                {
                    <div class="alerts alert-danger">
                        <p>@ErrorMessage</p>
                    </div>
                }

                <div class="email">
                    <label for="signInEmail">Email</label>
                    <InputText @bind-Value="Input.Email" class="form-input" type="text" placeholder="Enter your email address" id="signInEmail" />
                    <ValidationMessage For="@(() => Input.Email)" />
                </div>
                <div class="password">
                    <label for="signInPassword">Password</label>
                    <InputText @bind-Value="Input.Password" class="form-input" type="password" placeholder="Enter your password" id="signInPassword" />
                    <ValidationMessage For="@(() => Input.Password)" />
                </div>

                <div class="remember-me">
                    <InputCheckbox @bind-Value="Input.RememberMe" class="form-input" type="checkbox" id="signinRememberMe" />
                    <label class="text-s" for="signinRememberMe">Remember Me</label>

                </div>

                <div class="sign-in">
                    <button class="btn-theme" type="submit" novalidate>Sign in</button>
                    <a class="text-s" href="#">Forgot your password?</a>
                    <div class="line"></div>
                    <h6>Or sign in with your social account</h6>
                    <div class="external-login">
                        <a class="btn-gray" asp-controller="Auth" asp-action="Google"><i class="fa-brands fa-google"></i>Google</a>

                        <a class="btn-gray" asp-controller="Auth" asp-action="Facebook"><i class="fa-brands fa-facebook-f"></i>Facebook</a>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</section>

@code {
    private string? ErrorMessage { get; set; }

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            // Clear the existing external cookie to ensure a clean login process
            await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
        }
    }

    public async Task LoginUser()
    {
        // This doesn't count login failures towards account lockout
        // To enable password failures to trigger account lockout, set lockoutOnFailure: true
        var result = await SignInManager.PasswordSignInAsync(Input.Email, Input.Password, Input.RememberMe, lockoutOnFailure: false);
        if (result.Succeeded)
        {
            Logger.LogInformation("User logged in.");
            NavigationManager.NavigateTo(ReturnUrl ?? "/");
        }
        else
        {
            ErrorMessage = "Incorrect email or password";
        }
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Display(Name = "Remember me?")]
        public bool RememberMe { get; set; }
    }
}
